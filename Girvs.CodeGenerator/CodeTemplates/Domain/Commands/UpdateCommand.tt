namespace {{Namespace.CurrentNamespacePrefixName}}.Domain.Commands.{{EntityName}};
/// <summary>
/// 更新{{Comment}}命令
/// </summary>
/// <param name="{{PrimarykeyName}}">主键</param>
{% for field in Fields -%}
{% if  field.IsPrimarykey == false -%}
/// <param name="{{field.FieldName}}">{{field.Comment}}</param>
{% endif -%}
{% endfor -%}
public record Update{{EntityName}}Command(
   {{PrimarykeyTypeName}} {{PrimarykeyName}}
   {%- assign lastField = Fields | last -%}
   {%- for field in Fields -%}
   {%- if field.FieldName != lastField.FieldName -%}
   {{field.FieldTypeName}} {{field.FieldName}},
   {%- else -%}
   {{field.FieldTypeName}} {{field.FieldName}}
   {%- endif -%}
   {%- endfor -%} 
) : Command("更新{{Comment}}")
{
    public override void AddFluentValidationRule<TCommand>(AbstractValidator<TCommand> validator)
    {
        {%- for field in Fields -%}

        {%- if field.FieldTypeName == "string" -%}
        validator.RuleFor(x => {{field.FieldName}})
            .NotEmpty().WithMessage("{{field.Comment}}不能为空")
            .MaximumLength(50).WithMessage("{{field.Comment}}长度不能大于50")
            .MinimumLength(2).WithMessage("{{field.Comment}}长度不能小于2");
        {%- endif -%}
        {%- endfor -%} 
    }
}