namespace {{Namespace.CurrentNamespacePrefixName}}.Infrastructure.EntityConfigurations;

public class {{EntityName}}EntityTypeConfiguation : GirvsAbstractEntityTypeConfiguration<{{EntityName}}>
{
    public override void Configure(EntityTypeBuilder<{{EntityName}}> builder)
    {
        OnModelCreatingBaseEntityAndTableKey<{{EntityName}}, {{PrimarykeyTypeName}}>(builder);

        {%- for field in Fields -%}
        {%- if  field.DbType != "" -%}
        {%- if  field.IsGenericType == true -%}
        var {{field.FieldNameTitleCaseName}}Converter = new ValueConverter<{{field.FieldTypeName}}, string>(
            v => JsonConvert.SerializeObject(v),
            v => v.IsNullOrEmpty() ? new {{field.FieldTypeName}}() : JsonConvert.DeserializeObject<{{field.FieldTypeName}}>(v)
        );

        builder.Property(x => x.{{field.FieldName}})
            .HasColumnType("{{field.DbType}}")
            .HasConversion({{field.FieldNameTitleCaseName}}Converter)
            .HasComment("{{field.Comment}}");
        {%- else -%}
        builder.Property(x => x.{{field.FieldName}})
            .HasColumnType("{{field.DbType}}")
            {%- if  field.MaxLength > 0  -%}
            .HasMaxLength({{field.MaxLength}})
            {%- endif -%}
            .HasComment("{{field.Comment}}");
        {%- endif -%}        
        {%- endif -%}
        {%- endfor -%}
    }
}